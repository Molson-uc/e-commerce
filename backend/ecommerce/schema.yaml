openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/v1/schema/:
    get:
      operationId: api_v1_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /orders/create/:
    post:
      operationId: orders_create_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
          description: ''
  /orders/list/:
    get:
      operationId: orders_list_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderListList'
          description: ''
  /orders/update/:
    put:
      operationId: orders_update_update
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
          description: ''
    patch:
      operationId: orders_update_partial_update
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreate'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
          description: ''
  /products/create/:
    post:
      operationId: products_create_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
  /products/detail/{slug}/:
    get:
      operationId: products_detail_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
  /products/list/:
    get:
      operationId: products_list_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: price
        schema:
          type: number
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductListList'
          description: ''
  /products/update/{slug}/:
    get:
      operationId: products_update_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
    put:
      operationId: products_update_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
    patch:
      operationId: products_update_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductCreate'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
    delete:
      operationId: products_update_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    CategorySerialzer:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
      required:
      - name
    ImageUpload:
      type: object
      properties:
        image:
          type: string
          format: uri
      required:
      - image
    OrderCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        address:
          type: string
          maxLength: 250
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        postal_code:
          type: string
          maxLength: 20
        city:
          type: string
          maxLength: 100
      required:
      - address
      - city
      - email
      - first_name
      - id
      - items
      - last_name
      - postal_code
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        quantity:
          type: integer
        price:
          type: string
          readOnly: true
        cost:
          type: string
          readOnly: true
      required:
      - cost
      - id
      - price
      - product
    OrderList:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        address:
          type: string
          maxLength: 250
        postal_code:
          type: string
          maxLength: 20
        city:
          type: string
          maxLength: 100
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      required:
      - address
      - city
      - email
      - first_name
      - items
      - last_name
      - postal_code
    PaginatedOrderListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderList'
    PaginatedProductListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductList'
    PatchedOrderCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        address:
          type: string
          maxLength: 250
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        postal_code:
          type: string
          maxLength: 20
        city:
          type: string
          maxLength: 100
    PatchedProductCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        image:
          $ref: '#/components/schemas/ImageUpload'
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        category:
          $ref: '#/components/schemas/CategorySerialzer'
    ProductCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        image:
          $ref: '#/components/schemas/ImageUpload'
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        category:
          $ref: '#/components/schemas/CategorySerialzer'
      required:
      - category
      - image
      - name
      - price
    ProductDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorySerialzer'
        name:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
        image:
          type: string
          format: uri
        thumbnail:
          type: string
          format: uri
          readOnly: true
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - category
      - id
      - image
      - name
      - price
      - thumbnail
    ProductList:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        category:
          $ref: '#/components/schemas/CategorySerialzer'
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - category
      - name
      - price
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
